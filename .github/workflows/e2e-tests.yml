name: End-2-end tests

on:
  workflow_call:
    inputs:
      base-url:
        required: true
        type: string
      environment:
        required: true
        type: string
    secrets:
      e2e-key:
        required: true

jobs:
  e2e_tests:
    name: E2E tests
    runs-on: ubuntu-24.04
    defaults:
      run:
        working-directory: ./backend/end-2-end-tests
      
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Validate database
      id: validate-database
      run: |
        RESPONSE=$(curl -X GET ${{ inputs.base-url }}/v3/utils/database/valid \
          -H 'Content-Type:application/json; x-api-version=3.0')
        echo "response=$RESPONSE" >> $GITHUB_OUTPUT 

    - name: Database status
      run: echo '${{ steps.validate-database.outputs.response }}' | jq '.entities[]'

    - name: Database is invalid
      if: ${{ fromJSON(steps.validate-database.outputs.response).isValid == false }}
      uses: actions/github-script@v7
      with:
        script: |
          core.setFailed('Database is invalid')

    - name: Enable E2E testing
      run: |
        curl -i -X POST ${{ inputs.base-url }}/v3/utils/end2end/testing/enabled/true \
          -H 'Content-Type:text/json; x-api-version=3.0' \
          -d '"${{ secrets.e2e-key }}"'

    - name: Install newman
      run: npm install -g newman

    - name: Set up E2E tests
      run: newman run "Setup.postman_collection.json" -e "env/${{ inputs.environment}}.postman_environment.json" --export-environment "env/${{ inputs.environment}}_updated.postman_environment.json"

    - name: Run General API E2E tests
      run: |
          newman run "apis/general/Actor_API.postman_collection.json" -e "env/${{ inputs.environment}}_updated.postman_environment.json"
          newman run "apis/general/Attendance_API.postman_collection.json" -e "env/${{ inputs.environment}}_updated.postman_environment.json"
          newman run "apis/general/Badge_API.postman_collection.json" -e "env/${{ inputs.environment}}_updated.postman_environment.json"
          newman run "apis/general/Cohort_API.postman_collection.json" -e "env/${{ inputs.environment}}_updated.postman_environment.json"
          newman run "apis/general/Evaluator_API.postman_collection.json" -e "env/${{ inputs.environment}}_updated.postman_environment.json"
          newman run "apis/general/Module_API.postman_collection.json" -e "env/${{ inputs.environment}}_updated.postman_environment.json"
          newman run "apis/general/Presentation_API.postman_collection.json" -e "env/${{ inputs.environment}}_updated.postman_environment.json"
          newman run "apis/general/Student_API.postman_collection.json" -e "env/${{ inputs.environment}}_updated.postman_environment.json"
          newman run "apis/general/Utils_API.postman_collection.json" -e "env/${{ inputs.environment}}_updated.postman_environment.json"
          newman run "apis/general/Payment_API.postman_collection.json" -e "env/${{ inputs.environment}}_updated.postman_environment.json"
          newman run "apis/general/Applicant_API.postman_collection.json" -e "env/${{ inputs.environment}}_updated.postman_environment.json"
          newman run "apis/general/Survey_API.postman_collection.json" -e "env/${{ inputs.environment}}_updated.postman_environment.json"

    - name: Run Statistics API E2E tests
      run: |
          newman run "apis/statistics/Manager_Dashboard_API.postman_collection.json" -e "env/${{ inputs.environment}}_updated.postman_environment.json"
          newman run "apis/statistics/Statistics_API.postman_collection.json" -e "env/${{ inputs.environment}}_updated.postman_environment.json"

    - name: Clean up E2E tests
      if: always()
      run: newman run "Clean_up.postman_collection.json" -e "env/${{ inputs.environment}}_updated.postman_environment.json"

    - name: Disable E2E testing
      if: always()
      run: |
        curl -i -X POST ${{ inputs.base-url}}/v3/utils/end2end/testing/enabled/false \
          -H 'Content-Type:text/json; x-api-version=3.0' \
          -d '"${{ secrets.e2e-key}}"'