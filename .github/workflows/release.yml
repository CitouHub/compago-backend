name: LMS v3 release

on:
  workflow_call:
    inputs:
      azure-webapp-api-name:
        required: true
        type: string
      azure-static-webapp-ui-name:
        required: true
        type: string
      api-url:
        required: true
        type: string
      version:
        required: true
        type: string
    secrets:
      azure-webapp-api-publish-profile:
        required: true
      azure-static-web-app-ui-deployment-token:
        required: true

jobs:
  build_api:
    name: LMS v3 API Build
    runs-on: ubuntu-24.04
    env:
      DOTNET_VERSION: '8'
    defaults:
      run:
        working-directory: ./backend

    steps:
      - uses: actions/checkout@v4

      - name: Set up .NET ${{ env.DOTNET_VERSION }}
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Set version to ${{ inputs.version }}
        run: echo "`jq '.Version="${{ inputs.version }}"' LMS.v3.API/appsettings.json`" > LMS.v3.API/appsettings.json

      - name: Set up dependency caching for faster builds
        uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Exclude test projects
        run: dotnet sln remove LMS.v3.Test/LMS.v3.Test.csproj

      - name: Build with dotnet
        run: dotnet build --configuration Release

      - name: Publish with dotnet
        run: dotnet publish --configuration Release --property:PublishDir=${{ env.DOTNET_ROOT }}/${{ inputs.azure-webapp-api-name }}

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ inputs.azure-webapp-api-name }}
          path: ${{ env.DOTNET_ROOT }}/${{ inputs.azure-webapp-api-name }}

  deploy_api:
    name: LMS v3 API Deploy
    runs-on: ubuntu-24.04
    needs: build_api

    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ inputs.azure-webapp-api-name }}

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ inputs.azure-webapp-api-name }}
          publish-profile: ${{ secrets.azure-webapp-api-publish-profile }}
          package: .

      - name: Delete build artifact
        if: always()
        uses: geekyeggo/delete-artifact@v5
        with:
            name: ${{ inputs.azure-webapp-api-name }}

  build_frontend:
    name: LMS v3 UI Build
    runs-on: windows-2022
    env:
      NODE_VERSION: '20'
    defaults:
      run:
        working-directory: ./frontend

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
  
      - name: Set up Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install dependencies
        run: npm install

      - name: Build
        run: npm run build
        env:
          REACT_APP_LMS_API_URL: ${{ inputs.api-url }}
          REACT_APP_GOOGLE_CLIENT_ID: 447222439767-vshiqf3bhobq91ivkuusks0bm9i0l99d.apps.googleusercontent.com

      - name: Include static web site config
        run: move staticwebapp.config.json build

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ inputs.azure-static-webapp-ui-name }}
          path: frontend/build

  deploy_frontend:
    name: LMS v3 UI Deploy
    runs-on: ubuntu-24.04
    needs: build_frontend

    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ inputs.azure-static-webapp-ui-name }}

      - name: Deploy to Azure Static Web App
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.azure-static-web-app-ui-deployment-token }}
          action: "upload"

      - name: Delete build artifact
        if: always()
        uses: geekyeggo/delete-artifact@v5
        with:
            name: ${{ inputs.azure-static-webapp-ui-name }}